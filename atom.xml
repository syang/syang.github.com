<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A Dreamer, a Writer]]></title>
  <link href="http://syang.github.io/atom.xml" rel="self"/>
  <link href="http://syang.github.io/"/>
  <updated>2014-03-24T22:14:11-07:00</updated>
  <id>http://syang.github.io/</id>
  <author>
    <name><![CDATA[Shuo Yang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim Setup for Ansible]]></title>
    <link href="http://syang.github.io/blog/2014/03/11/vim-setup-for-ansible/"/>
    <updated>2014-03-11T16:27:55-07:00</updated>
    <id>http://syang.github.io/blog/2014/03/11/vim-setup-for-ansible</id>
    <content type="html"><![CDATA[<h3>Prerequisite: Install Vundle</h3>

<p><a href="https://github.com/gmarik/Vundle.vim">Vundle</a> is short for <em>Vim Bundle</em>, which is a plug-in manager for vim. If you want to use it for plug-in management, and read on.</p>

<p>Suppose you have already installed <a href="http://git-scm.com/book/en/Getting-Started-Installing-Git">Git</a>, set up Vundle from the source</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
</span></code></pre></td></tr></table></div></figure>


<h3>Configure the Ansible Bundle in your personal .vimrc</h3>

<p>Put the following at the top of your ~/.vimrc</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">set </span>nocompatible              <span class="s2">&quot; be iMproved, required</span>
</span><span class='line'><span class="s2">filetype off                  &quot;</span> required
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; set the runtime path to include Vundle and initialize</span>
</span><span class='line'><span class="s2">set rtp+=~/.vim/bundle/vundle/</span>
</span><span class='line'><span class="s2">call vundle#rc()</span>
</span><span class='line'><span class="s2">&quot;</span> alternatively, pass a path where Vundle should install bundles
</span><span class='line'><span class="s2">&quot;let path = &#39;~/some/path/here&#39;</span>
</span><span class='line'><span class="s2">&quot;</span>call vundle#rc<span class="o">(</span>path<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot; let Vundle manage Vundle, required</span>
</span><span class='line'><span class="s2">Bundle &#39;gmarik/vundle&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> Keep bundle commands between here and filetype plugin indent on.
</span><span class='line'><span class="s2">&quot; For Ansible formatting</span>
</span><span class='line'><span class="s2">Bundle &#39;chase/vim-ansible-yaml&#39;</span>
</span><span class='line'><span class="s2">&quot;</span> For Go Language formatting
</span><span class='line'>Bundle <span class="s1">&#39;jnwhiteh/vim-golang&#39;</span>
</span><span class='line'><span class="s2">&quot; For HTML/CSS formatting</span>
</span><span class='line'><span class="s2">Bundle &#39;mattn/emmet-vim&#39;</span>
</span><span class='line'><span class="s2">&quot;</span> For Chef script formatting
</span><span class='line'>Bundle <span class="s1">&#39;t9md/vim-chef&#39;</span>
</span><span class='line'>
</span><span class='line'>filetype plugin indent on     <span class="s2">&quot; required</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;</span> To ignore plugin indent changes, instead use:
</span><span class='line'><span class="s2">&quot;filetype plugin on</span>
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">&quot; Brief help</span>
</span><span class='line'><span class="s2">&quot;</span> :BundleList          - list configured bundles
</span><span class='line'><span class="s2">&quot; :BundleInstall(!)    - install (update) bundles</span>
</span><span class='line'><span class="s2">&quot;</span> :BundleSearch<span class="o">(</span>!<span class="o">)</span> foo - search <span class="o">(</span>or refresh cache first<span class="o">)</span> <span class="k">for </span>foo
</span><span class='line'><span class="s2">&quot; :BundleClean(!)      - confirm (or auto-approve) removal of unused bundles</span>
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">&quot; see :h vundle for more details or wiki for FAQ</span>
</span><span class='line'><span class="s2">&quot;</span> NOTE: comments after Bundle commands are not allowed.
</span><span class='line'><span class="err">&quot;</span> Put your stuff after this line
</span></code></pre></td></tr></table></div></figure>


<h3>Install Bundles:</h3>

<p>Lauch <code>vim</code> and run <code>:BundleInstall</code> OR install directly from command line: <code>vim +BundleInstall +qall</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started on Octopress]]></title>
    <link href="http://syang.github.io/blog/2014/02/25/getting-started-on-octopress/"/>
    <updated>2014-02-25T16:10:44-08:00</updated>
    <id>http://syang.github.io/blog/2014/02/25/getting-started-on-octopress</id>
    <content type="html"><![CDATA[<p>Octopress is a blogging engine built on top of Jekyll, and its documentation can be found at <a href="http://octopress.org/docs/,">http://octopress.org/docs/,</a> but here is a quick
summary of how to use it along with github pages.</p>

<h2>Github User pages</h2>

<p>As how this blog is hosted, Github can help you host a blog from <code>http://username.github.com</code>.</p>

<p>You need to first setup a user account <code>username</code>, and then you need to create a repo as<code>http://www.github.com/username/username.github.com</code>.</p>

<h2>Setup your blog configuration with Rake (One time work)</h2>

<p>Octopress provides a configuration task that helps you set up all config related to your blog using the following command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>Copy the SSH or HTTPS URL from your newly created repository (e.g. <code>git@github.com:username/username.github.io.git</code>)
and paste it in as a response.</p>

<h2>Write your blog posts</h2>

<p>You need to run the following command to create a new blog entry.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>And you can use your favorite editor to edit the blog post content.</p>

<p>Moreover, you can <strong> Specify the page name and location </strong>
You can add pages anywhere in your blog source directory and they&rsquo;ll be parsed by Jekyll. The URL will correspond directly to the filepath, so <code>about.markdown</code> will become <code>site.com/about.html</code>. If you prefer the URL <code>site.com/about/</code> you&rsquo;ll want to create the page as <code>about/index.markdown</code>. Octopress has a rake task for creating new pages easily.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_page<span class="o">[</span>super-awesome<span class="o">]</span>
</span><span class='line'><span class="c"># creates /source/super-awesome/index.markdown</span>
</span><span class='line'>
</span><span class='line'>rake new_page<span class="o">[</span>super-awesome/page.html<span class="o">]</span>
</span><span class='line'><span class="c"># creates /source/super-awesome/page.html</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Generate and Preview Site</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate   <span class="c"># Generates posts and pages into the public directory</span>
</span><span class='line'>rake watch      <span class="c"># Watches source/ and sass/ for changes and regenerates</span>
</span><span class='line'>rake preview    <span class="c"># Watches, and mounts a webserver at http://localhost:4000</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Last, Push to Github to Publish</h2>

<p>Publish the comment by the following, which push the generated site to <code>master</code> branch</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>Do not forget to push the <code>source</code> branch</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;your message&#39;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
